sync_to_github:
  stage: sync_to_github
  image: ubuntu:22.04
  tags:
    - docker
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    # 安装必要的依赖
    - apt-get update && apt-get install -y git openssh-client curl jq
    # 启动SSH Agent
    - eval $(ssh-agent -s)
    # 添加SSH私钥（base64编码格式）
    - echo "$GITHUB_DEPLOY_KEY" | base64 -d | tr -d '\r' | ssh-add -
    # 创建SSH目录并配置
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # 添加GitHub到known_hosts
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    # 配置Git用户信息
    - git config --global user.name "$GIT_CI_USER_NAME"
    - git config --global user.email "$GIT_CI_USER_EMAIL"
  script:
    - |
      # 添加GitHub远程仓库（使用SSH）
      git remote add github git@github.com:${GITHUB_REPO}.git || git remote set-url github git@github.com:${GITHUB_REPO}.git
      
      # 获取当前分支名
      export CURRENT_BRANCH=${CI_COMMIT_REF_NAME}
      echo "Current branch: $CURRENT_BRANCH"
      
      # 获取远程仓库最新信息
      echo "Fetching remote repository info..."
      git fetch github
      
      # 推送到GitHub
      echo "Starting sync to GitHub..."
      git push github "HEAD:$CURRENT_BRANCH" --force-with-lease
      
      # 如果是主分支，同时推送标签
      if [ "$CURRENT_BRANCH" = "main" ] || [ "$CURRENT_BRANCH" = "master" ]; then
        echo "Pushing tags to GitHub..."
        git push github --tags
      fi
    - |
      # 触发GitHub Action
      echo "Triggering GitHub Action merge_prs workflow..."
      RESPONSE=$(curl -L \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer $GITHUB_APP_TOKEN" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/OpenSiFli/SiFli-SDK/actions/workflows/merge_prs.yml/dispatches \
        -d '{"ref":"'$CURRENT_BRANCH'"}')
      
      if [ $? -eq 0 ]; then
        echo "✅ GitHub Action triggered successfully"
      else
        echo "❌ Failed to trigger GitHub Action"
        echo "Response: $RESPONSE"
        exit 1
      fi

      echo "✅ Sync completed successfully"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SYNC_GITHUB'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "web" && $SYNC_GITHUB'
      when: always
    - when: never